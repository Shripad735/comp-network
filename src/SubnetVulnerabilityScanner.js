import React, { useState } from "react";

const SubnetVulnerabilityScanner = () => {
  const [subnet, setSubnet] = useState("");
  const [scanResults, setScanResults] = useState([]);

  // Dummy data for vulnerabilities
  const vulnerabilities = [
    { ip: "192.168.1.10", openPorts: [22, 80], outdatedSoftware: true, weakPassword: false },
    { ip: "192.168.1.15", openPorts: [22, 443], outdatedSoftware: false, weakPassword: true },
    { ip: "192.168.1.20", openPorts: [80, 8080], outdatedSoftware: true, weakPassword: true },
  ];

  // Handle the scan action
  const handleScan = () => {
    setScanResults(vulnerabilities); // Simulate scan results
  };

  return (
    <div className="bg-gradient-to-br from-blue-100 to-indigo-200 min-h-screen flex flex-col items-center justify-center">
      <h1 className="text-3xl font-semibold text-indigo-800 mb-6">Subnet Vulnerability Scanner</h1>
      
      <div className="bg-white p-6 rounded-lg shadow-lg w-1/3">
        <label className="block mb-2 text-sm font-medium text-gray-700">Enter Subnet (e.g., 192.168.1.0/24)</label>
        <input
          type="text"
          value={subnet}
          onChange={(e) => setSubnet(e.target.value)}
          className="border border-gray-300 p-2 rounded w-full mb-4 focus:outline-none focus:border-indigo-500"
          placeholder="Enter Subnet"
        />
        <button
          onClick={handleScan}
          className="w-full bg-indigo-600 hover:bg-indigo-500 text-white py-2 rounded font-semibold transition"
        >
          Scan Subnet
        </button>
      </div>

      <div className="mt-8 w-2/3">
        {scanResults.length > 0 && (
          <div className="bg-white p-6 rounded-lg shadow-lg">
            <h2 className="text-xl font-semibold text-indigo-700 mb-4">Scan Results</h2>
            <table className="min-w-full table-auto">
              <thead>
                <tr className="bg-indigo-100">
                  <th className="py-2 px-4">IP Address</th>
                  <th className="py-2 px-4">Open Ports</th>
                  <th className="py-2 px-4">Outdated Software</th>
                  <th className="py-2 px-4">Weak Password</th>
                </tr>
              </thead>
              <tbody>
                {scanResults.map((device, index) => (
                  <tr key={index} className="text-center border-t">
                    <td className="py-2 px-4">{device.ip}</td>
                    <td className="py-2 px-4">{device.openPorts.join(", ")}</td>
                    <td className="py-2 px-4">{device.outdatedSoftware ? "Yes" : "No"}</td>
                    <td className="py-2 px-4">{device.weakPassword ? "Yes" : "No"}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        )}
      </div>
    </div>
  );
};

export default SubnetVulnerabilityScanner;